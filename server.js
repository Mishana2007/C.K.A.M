require('dotenv').config();
const express = require('express');
const fs = require('fs');
const path = require('path');
const axios = require('axios');
const geoip = require('geoip-lite');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 3000;
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, 'public')));

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
 */
async function sendToTelegram(message) {
    const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    try {
        const response = await axios.post(url, {
            chat_id: TELEGRAM_CHAT_ID,
            text: message,
            parse_mode: "HTML"
        });
        console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:", response.data);
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", error.response ? error.response.data : error);
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
 */
app.post('/save-data', async (req, res) => {
    try {
        const userData = req.body;
        let clientIp = req.headers['x-forwarded-for'] || req.socket.remoteAddress;

// –ï—Å–ª–∏ IP –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ "192.168.1.1, 176.124.213.215", –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π
if (clientIp.includes(',')) {
    clientIp = clientIp.split(',').pop().trim();
}

// –ü—Ä–∏–≤–æ–¥–∏–º IPv6 –∫ IPv4
if (clientIp.includes(':')) {
    clientIp = clientIp.split(':').pop();
}
console.log("üì° –ü–æ–ª—É—á–µ–Ω IP:", clientIp);
        userData.ip = clientIp;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–∞–Ω—É –∏ –≥–æ—Ä–æ–¥
        const geo = geoip.lookup(clientIp);
if (!geo) {
    console.log("‚ö†Ô∏è –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è IP:", clientIp);
} else {
    console.log(`üåç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: ${geo.country}, ${geo.city}`);
}
        userData.country = geo.country || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        userData.city = geo.city || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        userData.region = geo.region || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        userData.timezone = geo.timezone || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        userData.userAgent = req.headers['user-agent'] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
        const filePath = path.join(__dirname, 'user_data.json');
        fs.appendFile(filePath, JSON.stringify(userData, null, 2) + ",\n", (err) => {
            if (err) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', err);
                return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞' });
            }
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', filePath);

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram (–∫–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å ‚Äì –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
            const message = `
üåç <b>–ù–æ–≤—ã–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å —Å–∞–π—Ç–∞</b>
--------------------------------------------
üåç <b>–°—Ç—Ä–∞–Ω–∞:</b> ${userData.country}
üèô <b>–†–µ–≥–∏–æ–Ω, –≥–æ—Ä–æ–¥:</b> ${userData.region}, ${userData.city}
‚è∞ <b>–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞:</b> ${userData.timezone}
üñ• <b>IP:</b> <code>${userData.ip}</code>
ü§ñ <b>User-Agent:</b> <code>${userData.userAgent}</code>
--------------------------------------------
`;
// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ
sendToTelegram(message);

res.status(200).json({ message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã' });
});
} catch (error) {
console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON:', error);
res.status(400).json({ message: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' });
}
});

/**
* –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
*/

// üìå –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ "C.K.A.M"
app.use(express.static(__dirname)); // üìå –†–∞–∑–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏

app.get("/", (req, res) => {
res.sendFile(path.join(__dirname, "index.html")); // üìå –¢–µ–ø–µ—Ä—å –ø—É—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
});
app.listen(PORT, () => {
console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
